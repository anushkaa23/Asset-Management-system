@page "/"
@inject IDashboardService DashboardService
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager NavigationManager

<PageTitle>Dashboard - Asset Management</PageTitle>

<div class="container-fluid mt-4">
    <h1 class="mb-4">Asset Management Dashboard</h1>
    
    @if (dashboardData != null)
    {
        <div class="row">
            <div class="col-md-3 mb-3">
                <div class="card">
                    <div class="card-body text-center">
                        <h5>Total Assets</h5>
                        <h2 class="text-primary">@dashboardData.TotalAssets</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card">
                    <div class="card-body text-center">
                        <h5>Available Assets</h5>
                        <h2 class="text-success">@dashboardData.AvailableAssets</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card">
                    <div class="card-body text-center">
                        <h5>Assigned Assets</h5>
                        <h2 class="text-warning">@dashboardData.AssignedAssets</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card">
                    <div class="card-body text-center">
                        <h5>Active Employees</h5>
                        <h2 class="text-info">@dashboardData.ActiveEmployees</h2>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <p>Loading...</p>
    }
</div>

@code {
    private DashboardDTO? dashboardData;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var result = await SessionStorage.GetAsync<string>("username");
                if (!result.Success || string.IsNullOrEmpty(result.Value))
                {
                    NavigationManager.NavigateTo("/login");
                    return;
                }

                dashboardData = await DashboardService.GetDashboardDataAsync();
                StateHasChanged();
            }
            catch
            {
                NavigationManager.NavigateTo("/login");
            }
        }
    }
}
